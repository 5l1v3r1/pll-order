(ns pll-order.core)

(def plls {
  :H  (alg-permutation '(L R U2 L' R' F' B' U2 F B))
  :Ua (alg-permutation '(R2 U' R' U' R U R U R U' R))
  :Ub (alg-permutation '(R' U R' U' R' U' R' U R U R2))
  :Z  (alg-permutation '(U R' U' R U' R U R U' R' U R U R2 U' R' U))
  :Aa (alg-permutation '(R' F R' B2 R F' R' B2 R2))
  :Ab (alg-permutation '(R B' R F2 R' B R F2 R2))
  :E  (alg-permutation '(R' U L' D2 L U' R L' U R' D2 R U' L))
  :F  (alg-permutation '(R' U R U' R2 F' U' F U R F R' F' R2 U'))
  :Ga (alg-permutation '(R2 U R' U R' U' R U' R2 D U' R' U R D'))
  :Gb (alg-permutation '(R' U' R B2 D L' U L U' L D' B2))
  :Gc (alg-permutation '(L' U' L U L U' F' L' U' L' U L F U' L U2 L'))
  :Gd (alg-permutation '(U' R' F' R F' U' L' U F R' F' L F2 R))
  :Ja (alg-permutation '(B' U F' U2 B U' B' U2 F B U'))
  :Jb (alg-permutation '(B U' F U2 B' U B U2 F' B' U))
  :Na (alg-permutation '(L U' R U2 L' U R' L U' R U2 L' U R' U'))
  :Nb (alg-permutation '(R' U L' U2 R U' L R' U L' U2 R U' L U))
  :Ra (alg-permutation '(R U2 R' U2 R B' R' U' R U R B R2 U))
  :Rb (alg-permutation '(R' U2 R U2 R' F R U R' U' R' F' R2' U'))
  :T  (alg-permutation '(R U R' U' R' F R2 U' R' U' R U R' F'))
  :V  (alg-permutation '(R' U R' U' B' R' B2 U' B' U B' R B R))
  :Y  (alg-permutation '(F R U' R' U' R U R' F' R U R' U' R' F R F'))
})
